// Mocks generated by Mockito 5.0.17 from annotations
// in expire_app/test/Widget%20test/sign_in_up_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i7;

import 'package:expire_app/enums/sign_in_method.dart' as _i6;
import 'package:expire_app/helpers/firebase_auth_helper.dart' as _i5;
import 'package:firebase_auth/firebase_auth.dart' as _i4;
import 'package:flutter_facebook_auth/flutter_facebook_auth.dart' as _i3;
import 'package:google_sign_in/google_sign_in.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types

class _FakeGoogleSignIn_0 extends _i1.Fake implements _i2.GoogleSignIn {}

class _FakeFacebookAuth_1 extends _i1.Fake implements _i3.FacebookAuth {}

class _FakeFirebaseAuth_2 extends _i1.Fake implements _i4.FirebaseAuth {}

/// A class which mocks [FirebaseAuthHelper].
///
/// See the documentation for Mockito's code generation for more information.
class MockFirebaseAuthHelper extends _i1.Mock
    implements _i5.FirebaseAuthHelper {
  MockFirebaseAuthHelper() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.GoogleSignIn get googleSignIn =>
      (super.noSuchMethod(Invocation.getter(#googleSignIn),
          returnValue: _FakeGoogleSignIn_0()) as _i2.GoogleSignIn);
  @override
  set googleSignIn(_i2.GoogleSignIn? _googleSignIn) =>
      super.noSuchMethod(Invocation.setter(#googleSignIn, _googleSignIn),
          returnValueForMissingStub: null);
  @override
  _i3.FacebookAuth get facebookAuth =>
      (super.noSuchMethod(Invocation.getter(#facebookAuth),
          returnValue: _FakeFacebookAuth_1()) as _i3.FacebookAuth);
  @override
  set facebookAuth(_i3.FacebookAuth? _facebookAuth) =>
      super.noSuchMethod(Invocation.setter(#facebookAuth, _facebookAuth),
          returnValueForMissingStub: null);
  @override
  _i4.FirebaseAuth get auth => (super.noSuchMethod(Invocation.getter(#auth),
      returnValue: _FakeFirebaseAuth_2()) as _i4.FirebaseAuth);
  @override
  bool get isAuth =>
      (super.noSuchMethod(Invocation.getter(#isAuth), returnValue: false)
          as bool);
  @override
  bool get isDisplayNameSet =>
      (super.noSuchMethod(Invocation.getter(#isDisplayNameSet),
          returnValue: false) as bool);
  @override
  _i6.SignInMethod get signInMethod =>
      (super.noSuchMethod(Invocation.getter(#signInMethod),
          returnValue: _i6.SignInMethod.None) as _i6.SignInMethod);
  @override
  _i7.Future<void>? setDisplayName(String? displayName) => (super.noSuchMethod(
      Invocation.method(#setDisplayName, [displayName]),
      returnValueForMissingStub: Future<void>.value()) as _i7.Future<void>?);
  @override
  _i7.Future<void> signInWithEmail({String? email, String? password}) =>
      (super.noSuchMethod(
          Invocation.method(
              #signInWithEmail, [], {#email: email, #password: password}),
          returnValue: Future<void>.value(),
          returnValueForMissingStub: Future<void>.value()) as _i7.Future<void>);
  @override
  _i7.Future<void> signUpWithEmail(
          {String? email, String? password, String? familyId}) =>
      (super.noSuchMethod(
          Invocation.method(#signUpWithEmail, [],
              {#email: email, #password: password, #familyId: familyId}),
          returnValue: Future<void>.value(),
          returnValueForMissingStub: Future<void>.value()) as _i7.Future<void>);
  @override
  _i7.Future<void> googleLogIn() =>
      (super.noSuchMethod(Invocation.method(#googleLogIn, []),
          returnValue: Future<void>.value(),
          returnValueForMissingStub: Future<void>.value()) as _i7.Future<void>);
  @override
  _i7.Future<void> facebookLogIn() =>
      (super.noSuchMethod(Invocation.method(#facebookLogIn, []),
          returnValue: Future<void>.value(),
          returnValueForMissingStub: Future<void>.value()) as _i7.Future<void>);
  @override
  _i7.Future<void> logOut() =>
      (super.noSuchMethod(Invocation.method(#logOut, []),
          returnValue: Future<void>.value(),
          returnValueForMissingStub: Future<void>.value()) as _i7.Future<void>);
}
